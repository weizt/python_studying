# 闭包是由函数及其相关的引用环境组合而成的实体（即：闭包=函数块+引用环境）
# 如果在一个内部函数里，对外部作用域（但不是在全局作用域）的变量进行引用，那么内部函数就被认定为闭包（closure）
def outer():
    x = 10  # 在外部函数定义一个局部变量

    def inner():
        # 在内部函数中修改外部函数的局部变量使用nonlocal
        nonlocal x  # 此时的x是外部函数的局部变量x，而不是新增的变量
        y = x + 1
        print('y={}'.format(y))
        x = 20

    return inner


# 一个括号表示调用outet()，再加一个括号表示再调inner()
outer()()
